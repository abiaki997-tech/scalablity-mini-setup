version: "3.8"

services:
  nginx:
    image: nginx:latest
    ports:
      - "8080:8080"
    volumes:
      - ./nginx_cfg/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - apigateway
    networks:
      - app-network

  apigateway:
    build: ./custom_gateway
    ports:
      - "8000:8000"
    volumes:
      - ./custom_gateway:/usr/src/app
      - /usr/src/app/node_modules
    working_dir: /usr/src/app
    command: node gateway.js
    networks:
      - app-network

  haproxy:
    image: haproxy:latest
    ports:
      - "8082:8082"
    volumes:
      - ./haproxy/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg
    networks:
      - app-network

  servicea:
    build: ./services
    ports:
      - "1111:3000"
    container_name: servicea
    volumes:
      - ./services:/usr/src/app
      - /usr/src/app/node_modules
    working_dir: /usr/src/app
    command: node index.js
    environment:
     - HOST_PORT=1111
    networks:
      - app-network

  serviceb:
    
    build: 
     context: ./services
     dockerfile: Dockerfile
    container_name: serviceb
    ports:
      - "2222:3000"
    # volumes:
    #   - ./services:/usr/src/app
    #   - /usr/src/app/node_modules
    working_dir: /usr/src/app
    command: node index.js
    environment:
     - HOST_PORT=2222
    networks:
      - app-network
    restart: always # ensures service restarts if it crashes

networks:
  app-network:
    driver: bridge
